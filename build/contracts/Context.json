{
  "contractName": "Context",
  "abi": [],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n",
  "sourcePath": "/home/swatim/TRON/CUR-NFTs/contracts/@openzeppelin/contracts/utils/Context.sol",
  "ast": {
    "absolutePath": "/home/swatim/TRON/CUR-NFTs/contracts/@openzeppelin/contracts/utils/Context.sol",
    "exportedSymbols": {
      "Context": [
        15156
      ]
    },
    "id": 15157,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15136,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:104"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15137,
          "nodeType": "StructuredDocumentation",
          "src": "58:496:104",
          "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
        },
        "fullyImplemented": true,
        "id": 15156,
        "linearizedBaseContracts": [
          15156
        ],
        "name": "Context",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15145,
              "nodeType": "Block",
              "src": "649:34:104",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 15142,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "666:3:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 15143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "666:10:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 15141,
                  "id": 15144,
                  "nodeType": "Return",
                  "src": "659:17:104"
                }
              ]
            },
            "id": 15146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "606:2:104"
            },
            "returnParameters": {
              "id": 15141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15140,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15146,
                  "src": "640:7:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:7:104",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "639:9:104"
            },
            "scope": 15156,
            "src": "587:96:104",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15154,
              "nodeType": "Block",
              "src": "756:32:104",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 15151,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "773:3:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 15152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "773:8:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 15150,
                  "id": 15153,
                  "nodeType": "Return",
                  "src": "766:15:104"
                }
              ]
            },
            "id": 15155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "706:2:104"
            },
            "returnParameters": {
              "id": 15150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15149,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15155,
                  "src": "740:14:104",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15148,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:5:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "739:16:104"
            },
            "scope": 15156,
            "src": "689:99:104",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 15157,
        "src": "555:235:104"
      }
    ],
    "src": "33:758:104"
  },
  "legacyAST": {
    "absolutePath": "/home/swatim/TRON/CUR-NFTs/contracts/@openzeppelin/contracts/utils/Context.sol",
    "exportedSymbols": {
      "Context": [
        15156
      ]
    },
    "id": 15157,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15136,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:104"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15137,
          "nodeType": "StructuredDocumentation",
          "src": "58:496:104",
          "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
        },
        "fullyImplemented": true,
        "id": 15156,
        "linearizedBaseContracts": [
          15156
        ],
        "name": "Context",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15145,
              "nodeType": "Block",
              "src": "649:34:104",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 15142,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "666:3:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 15143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "666:10:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 15141,
                  "id": 15144,
                  "nodeType": "Return",
                  "src": "659:17:104"
                }
              ]
            },
            "id": 15146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "606:2:104"
            },
            "returnParameters": {
              "id": 15141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15140,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15146,
                  "src": "640:7:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:7:104",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "639:9:104"
            },
            "scope": 15156,
            "src": "587:96:104",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15154,
              "nodeType": "Block",
              "src": "756:32:104",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 15151,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "773:3:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 15152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "773:8:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 15150,
                  "id": 15153,
                  "nodeType": "Return",
                  "src": "766:15:104"
                }
              ]
            },
            "id": 15155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "706:2:104"
            },
            "returnParameters": {
              "id": 15150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15149,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15155,
                  "src": "740:14:104",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15148,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:5:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "739:16:104"
            },
            "scope": 15156,
            "src": "689:99:104",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 15157,
        "src": "555:235:104"
      }
    ],
    "src": "33:758:104"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.7c2e6412.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2021-12-16T04:49:26.495Z"
}