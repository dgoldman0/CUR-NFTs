{
  "contractName": "ITRC1271",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the TRC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[TRC-1271].\n *\n * _Available since v4.1._\n */\ninterface ITRC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n",
  "sourcePath": "/home/swatim/TRON/CUR-NFTs/contracts/@openzeppelin/contracts/interfaces/ITRC1271.sol",
  "ast": {
    "absolutePath": "/home/swatim/TRON/CUR-NFTs/contracts/@openzeppelin/contracts/interfaces/ITRC1271.sol",
    "exportedSymbols": {
      "ITRC1271": [
        5194
      ]
    },
    "id": 5195,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5182,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:22"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 5183,
          "nodeType": "StructuredDocumentation",
          "src": "58:189:22",
          "text": " @dev Interface of the TRC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[TRC-1271].\n _Available since v4.1._"
        },
        "fullyImplemented": false,
        "id": 5194,
        "linearizedBaseContracts": [
          5194
        ],
        "name": "ITRC1271",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 5184,
              "nodeType": "StructuredDocumentation",
              "src": "273:220:22",
              "text": " @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"
            },
            "functionSelector": "1626ba7e",
            "id": 5193,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5186,
                  "mutability": "mutable",
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5193,
                  "src": "524:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5185,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5188,
                  "mutability": "mutable",
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 5193,
                  "src": "538:22:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5187,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "523:38:22"
            },
            "returnParameters": {
              "id": 5192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5191,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 5193,
                  "src": "585:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5190,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "584:19:22"
            },
            "scope": 5194,
            "src": "498:106:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5195,
        "src": "248:358:22"
      }
    ],
    "src": "33:574:22"
  },
  "legacyAST": {
    "absolutePath": "/home/swatim/TRON/CUR-NFTs/contracts/@openzeppelin/contracts/interfaces/ITRC1271.sol",
    "exportedSymbols": {
      "ITRC1271": [
        5194
      ]
    },
    "id": 5195,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5182,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:22"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 5183,
          "nodeType": "StructuredDocumentation",
          "src": "58:189:22",
          "text": " @dev Interface of the TRC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[TRC-1271].\n _Available since v4.1._"
        },
        "fullyImplemented": false,
        "id": 5194,
        "linearizedBaseContracts": [
          5194
        ],
        "name": "ITRC1271",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 5184,
              "nodeType": "StructuredDocumentation",
              "src": "273:220:22",
              "text": " @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"
            },
            "functionSelector": "1626ba7e",
            "id": 5193,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5186,
                  "mutability": "mutable",
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5193,
                  "src": "524:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5185,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5188,
                  "mutability": "mutable",
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 5193,
                  "src": "538:22:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5187,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "523:38:22"
            },
            "returnParameters": {
              "id": 5192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5191,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 5193,
                  "src": "585:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5190,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "584:19:22"
            },
            "scope": 5194,
            "src": "498:106:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5195,
        "src": "248:358:22"
      }
    ],
    "src": "33:574:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.7c2e6412.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2021-12-16T04:49:26.429Z"
}